plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'net.daum'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}
/* 최초 생성한 스프링부트 3.0 그루비 gradle에서 : gradle(groovy), war, 자바 17, java언어로 선택함. */
dependencies {//gradle 방식에서 의존성 주입부분이다.
	
	//웹소켓!!! 채팅을 위해 새로 추가함
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	//json 데이터를 처리하기 위해
	//implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	//implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.3.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	annotationProcessor 'org.projectlombok:lombok'
	
	/* 스프링 부트 2.0 버전에서는 톰켓 내장 서버 부분 주석문 처리 안해도 되지만 스프링 부트 3.0에서는 톰켓 10버전과 서블릿 , 
	JSTL을 사용하기 위해서는 이 부분을 주석문 처리해야 한다. */
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.3.1'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	/* jsp 실행*/
    implementation "org.apache.tomcat.embed:tomcat-embed-jasper"
   
   implementation 'javax.servlet:jstl' //스프링부트 3.0 미만에서 JSTL실행. 
   
   /* 스프링부트 3.0 이상에서 서블릿과 JSTL 실행 
    implementation 'jakarta.servlet:jakarta.servlet-api' 
    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api' 
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'*/ 
    
    /* build.gradle 수정하고 프로젝트명 또는 
    build.gradle 선택 -> 우클릭 -> 단축 팝업메뉴 -> Gradle -> Refresh Gradle Project를 해야 변경사항이 반영된다. */   
    
    /*java.lang.NoSuchMethodError: 'java.util.Set org.junit.platform.engine.TestDescriptor.getAncestors()' 
    JUnit 테스트 실행시 위 에러가 발생하는 이유는 JUnit 5.9.3에서는  org.junit.platform:junit-platform-engine:1.9.3 이 없어서이다. 
    그래서 아래것 의존성을 추가하면 에러가 발생하지 않는다. */
    testImplementation 'org.junit.platform:junit-platform-launcher:1.9.3'

implementation 'ch.qos.logback:logback-classic:1.2.6' // 적절한 버전을 선택하세요
implementation 'org.slf4j:slf4j-api:1.7.32' // 적절한 버전을 선택하세요
implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'
allprojects {
	repositories {
		mavenCentral()
		maven { url 'https://jitpack.io' }
	}
}



}
tasks.named('test') {
	useJUnitPlatform()
}